" Note: Skip initialization for vim-tiny or vim-small.
if 0 | endif

if &compatible
  set nocompatible               " Be iMproved
endif

" Required:
set runtimepath^=~/.vim/bundle/neobundle.vim/

" Required:
call neobundle#begin(expand('~/.vim/bundle/'))

" Let NeoBundle manage NeoBundle
" Required:
NeoBundleFetch 'Shougo/neobundle.vim'

" My Bundles here:
" Refer to |:NeoBundle-examples|.
" Note: You don't set neobundle setting in .gvimrc!


" Base plugins {{{bases

NeoBundle       'bkad/CamelCaseMotion'
NeoBundle       'ctrlpvim/ctrlp.vim'
NeoBundle       'itchyny/lightline.vim'
NeoBundleLazy   'junegunn/vim-easy-align', {
      \           'autoload': {
      \             'commands' : ['EasyAlign'],
      \             'mappings' : ['<Plug>(EasyAlign)'],
      \           }}
NeoBundle       'majutsushi/tagbar'
NeoBundle       'nathanaelkane/vim-indent-guides'
NeoBundle       'rking/ag.vim'
NeoBundle       'Shougo/vimproc', {
      \           'build': {
      \             'windows': 'make -f make_mingw32.mak',
      \             'cygwin': 'make -f make_cygwin.mak',
      \             'mac'   : 'make -f make_mac.mak',
      \             'unix'  : 'make -f make_unix.mak',
      \           }
      \         }
NeoBundle       'Shougo/unite.vim'
NeoBundle       'Shougo/unite-help', {
      \           'depends': ['Shougo/unite.vim'],
      \         }
NeoBundle       'Shougo/unite-outline', {
      \           'depends': ['Shougo/unite.vim'],
      \         }
NeoBundle       'Shougo/neomru.vim', {
      \           'depends': ['Shougo/unite.vim'],
      \         }
NeoBundle       'Shougo/neocomplete', {
      \           'depends': ['Shougo/vimproc'],
      \           'autoload': {
      \             'insert': 1
      \           }
      \         }
NeoBundleLazy   'Shougo/neosnippet', {
      \           'depends': 'Shougo/neosnippet-snippets',
      \           'autoload': {
      \             'insert': 1,
      \             'filetypes': 'snippet',
      \           }
      \         }
NeoBundle       'Shougo/neosnippet-snippets'
NeoBundleLazy   'Shougo/vimfiler', {
      \           'depends': ['Shougo/unite.vim'],
      \             'autoload': {
      \             'commands': [ 'VimFilerTab', 'VimFiler', 'VimFilerExplorer', 'VimFilerBufferDir' ],
      \             'mappings': ['<Plug>(vimfiler_switch)'],
      \             'explorer': 1,
      \           }
      \         }
if v:version >= 703
  NeoBundle       'Shougo/vimshell', {
        \           'depends': ['Shougo/vimproc'],
        \           'autoload': {
        \             'commands': [{
        \               'name': 'VimShell',
        \               'complete': 'customlist,vimshell#complete'
        \             }, 'VimShellExecute', 'VimShellInteractive', 'VimShellTerminal', 'VimShellPop'],
        \             'mappings': ['<Plug>(vimshell_switch)']
        \           }
        \         }
endif
NeoBundle       'scrooloose/nerdtree'
NeoBundle       'scrooloose/nerdcommenter', {
      \           'depends': ['scrooloose/nerdtree'],
      \         }
NeoBundle       'scrooloose/syntastic'
NeoBundleLazy   'thinca/vim-quickrun', {
      \           'autoload': {
      \             'mappings': [['n', '\r']],
      \             'commands': ['QuickRun']
      \           }
      \         }
NeoBundle       'thinca/vim-ref'
NeoBundle       'thinca/vim-template'
"NeoBundle       'Townk/vim-autoclose'
NeoBundle       'tpope/vim-fugitive'
NeoBundle       'tpope/vim-surround'
NeoBundleLazy   'tpope/vim-endwise', {
      \           'autoload': {'insert': 1,}
      \         }
NeoBundle       'vim-scripts/grep.vim'
NeoBundle       'xolox/vim-session', {
      \           'depends': ['xolox/vim-misc'],
      \         }

"" Color
NeoBundle       'tomasr/molokai'

" }}}bases


" Filetype plugins {{{filetypes

"" CoffeeScript
NeoBundle       'kchmck/vim-coffee-script', {
      \               'autoload': {
      \                 'filetypes': ['coffee'],
      \               }
      \             }

"" CSS/Scss/Sass
NeoBundle       'gorodinskiy/vim-coloresque'
NeoBundle       'hail2u/vim-css3-syntax'
NeoBundle       'cakebaker/scss-syntax.vim'

"" Dockerfile
NeoBundleLazy   'ekalinin/Dockerfile.vim', {
      \           'autoload': {
      \             'filetypes': ['docker'],
      \           }
      \         }

"" Elixir
NeoBundleLazy   'elixir-lang/vim-elixir', {
      \           'autoload': {
      \             'filetypes': ['elixir'],
      \           }
      \         }

"" Go
NeoBundleLazy   'fatih/vim-go', {
      \           'autoload': {
      \             'filetypes': ['go'],
      \           }
      \         }
"NeoBundleLazy   'google/vim-ft-go', {
"  \               'autoload': {
"  \                 'filetypes': ['go'],
"  \               }
"  \             }
"NeoBundleLazy   'vim-jp/vim-go-extra', {
"  \               'autoload': {
"  \                 'filetypes': ['go'],
"  \               }
"  \             }

"" Haskell
"NeoBundleLazy   'dag/vim2hs', {
"  \               'autoload': {
"  \                 'filetypes': ['haskell'],
"  \               }
"  \             }
"NeoBundleLazy   'ujihisa/neco-ghc', {
"  \               'autoload': {
"  \                 'filetypes': ['haskell'],
"  \               }
"  \             }
"NeoBundleLazy   'eagletmt/ghcmod-vim', {
"  \               'autoload': {
"  \                 'filetypes': ['haskell'],
"  \               }
"  \             }

"" JavaScript/ECMAScript
NeoBundleLazy   'pangloss/vim-javascript', {
      \           'autoload': {
      \             'filetypes': ['javascript'],
      \           }
      \         }
NeoBundleLazy   'heavenshell/vim-jsdoc', {
      \           'autoload': {
      \             'filetypes': ['javascript'],
      \           }
      \         }

""" Node.js
NeoBundleLazy   'moll/vim-node', {
      \           'autoload': {
      \             'filetypes': ['javascript'],
      \           }
      \         }
NeoBundleLazy   'tommcdo/vim-express', {
      \           'autoload': {
      \             'filetypes': ['javascript'],
      \           }
      \         }
NeoBundleLazy   'isRuslan/vim-es6', {
      \           'autoload': {
      \             'filetypes': ['javascript'],
      \           }
      \         }
NeoBundleLazy   'othree/yajs.vim', {
      \           'autoload': {
      \             'filetypes': ['javascript'],
      \           }
      \         }

""" React.js
NeoBundleLazy   'mxw/vim-jsx', {
      \           'autoload': {
      \             'filetypes': ['javascript'],
      \           }
      \         }
NeoBundleLazy   'leafgarland/typescript-vim', {
      \           'autoload': {
      \             'filetypes': ['typescript'],
      \           }
      \         }

""" Vue.js
NeoBundle       'posva/vim-vue'
NeoBundle       'sekel/vim-vue-syntastic'

"" JSON
NeoBundleLazy   'leshill/vim-json', {
      \           'autoload': {
      \             'filetypes': ['json'],
      \           }
      \         }

"" HTML/Haml/Slim/Twig
NeoBundle       'evidens/vim-twig'
NeoBundle       'digitaltoad/vim-pug'
NeoBundle       'slim-template/vim-slim'
NeoBundle       'tpope/vim-haml'
NeoBundleLazy   'othree/html5.vim', {
      \           'autoload': {
      \             'filetypes': ['html'],
      \           }
      \         }
NeoBundleLazy   'mattn/emmet-vim', {
      \           'autoload': {
      \             'filetypes': ['html', 'eruby', 'jsp', 'xml', 'css', 'scss', 'sass', 'coffee'],
      \             'commands': ['<Plug>ZenCodingExpandNormal']
      \           }
      \         }

"" Markdown
NeoBundleLazy   'tpope/vim-markdown', {
      \           'autoload': {
      \             'filetypes': ['markdown'],
      \           }
      \         }

"" Perl
NeoBundleLazy   'petdance/vim-perl', {
      \           'autoload': {
      \             'filetypes': ['perl'],
      \           }
      \         }
NeoBundleLazy   'hotchpotch/perldoc-vim', {
      \           'autoload': {
      \             'filetypes': ['perl'],
      \           }
      \         }

"" PHP
NeoBundleLazy   'arnaud-lb/vim-php-namespace', {
      \           'autoload': {
      \             'filetypes': ['php'],
      \           }
      \         }
NeoBundleLazy   'StanAngeloff/php.vim', {
      \           'autoload': {
      \             'filetypes': ['php'],
      \           }
      \         }

"" Python
NeoBundleLazy   'davidhalter/jedi-vim', {
      \           'autoload': {
      \             'filetypes': ['python', 'python3', 'djangohtml'],
      \             'build': {
      \               'mac': 'pip install jedi',
      \               'unix': 'pip install jedi',
      \             }
      \           }
      \         }
NeoBundleLazy   'vim-pandoc/vim-pandoc', {
      \           'autoload': {
      \             'filetypes': ['text', 'pandoc', 'markdown', 'rst', 'textile'],
      \           }
      \         }

"" Ruby
NeoBundleLazy   'vim-ruby/vim-ruby', {
      \           'autoload': {
      \             'filetypes': ['ruby', 'eruby']
      \           }
      \         }
NeoBundleLazy   'tpope/vim-rails', {
      \           'autoload': {
      \             'filetypes': ['ruby'],
      \           }
      \         }
NeoBundleLazy   'thoughtbot/vim-rspec', {
      \           'autoload': {
      \             'filetypes': ['ruby'],
      \           }
      \         }
NeoBundleLazy   'tpope/vim-rake', {
      \           'autoload': {
      \             'filetypes': ['ruby'],
      \           }
      \         }
NeoBundle       'tpope/vim-projectionist'
NeoBundle       'ecomba/vim-ruby-refactoring'

"" Scala
NeoBundleLazy   'derekwyatt/vim-scala', {
      \           'autoload': {
      \             'filetypes': ['scala'],
      \           }
      \         }

"" XML/[X]HTML/SGML/XSLT
NeoBundleLazy   'othree/xml.vim', {
      \           'autoload': {
      \             'filetypes': ['xml', 'xhtml', 'sgml', 'xslt'],
      \           }
      \         }

"" Yaml
NeoBundleLazy   'mrk21/yaml-vim', {
      \           'autoload': {
      \             'filetypes': ['yaml'],
      \           }
      \         }

" }}}filetypes

call neobundle#end()

" NeoBundleCheck を走らせ起動時に未インストールプラグインをインストールする
NeoBundleCheck

filetype plugin indent on

" vim:fdm=marker expandtab fdc=3 ft=vim ts=2 sw=2 sts=2:
